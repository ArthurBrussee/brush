[package]
name = "brush-app"
edition.workspace = true
version.workspace = true
readme.workspace = true
license.workspace = true
repository.workspace = true

[[bin]]
name = "brush_app"
path = "src/bin.rs"

[dependencies]
# Brush deps.
brush-ui.path = "../brush-ui"
brush-render.path = "../brush-render"
brush-dataset.path = "../brush-dataset"
brush-msg.path = "../brush-msg"
brush-process.path = "../brush-process"

burn-wgpu.workspace = true
burn-cubecl.workspace = true

glam.workspace = true

egui.workspace = true
eframe.workspace = true
log.workspace = true

anyhow.workspace = true
tracing.workspace = true
tokio_with_wasm = { workspace = true, features = ["rt"] }
tokio-stream.workspace = true
parking_lot.workspace = true


[target.'cfg(not(target_family = "wasm"))'.dependencies]
brush-cli.path = "../brush-cli"
clap.workspace = true
tokio = { workspace = true, features = ["io-util", "rt", "rt-multi-thread"] }
env_logger.workspace = true

# Default to wayland on linux. Change this to x11 if needed.
# this perhaps could use a feature on our side as well,
# so you could run with cargo run --no-default-features --features=11
winit = { version = "0.30", features = ["default"] }

[target.'cfg(target_family = "wasm")'.dependencies]
tracing-wasm.workspace = true
tokio = { workspace = true, features = ["io-util", "rt"] }
wasm-bindgen.workspace = true
console_error_panic_hook.workspace = true
web-sys.workspace = true
wasm-logger.workspace = true
getrandom = { version = "0.3", features = ["wasm_js"] }

[package.metadata.wasm-pack.profile.release.wasm-bindgen]
debug-js-glue = false
demangle-name-section = false
dwarf-debug-info = false
omit-default-module-path = false

[package.metadata.cargo-machete]
ignored = ["winit"] # Need winit to set backend.

[lints]
workspace = true


[features]
tracy = ["brush-ui/tracy"]
tracing = ["brush-ui/tracing"]
